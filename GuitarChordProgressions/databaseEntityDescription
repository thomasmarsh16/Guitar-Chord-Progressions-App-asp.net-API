Description for SQL database implemented on Azure SQL Serverless

---// Entitie Tables //---

---------------|| Guitar Chord ||--------------

primary key: chordID ( INTEGER  )
attributes: 
- note ( VARCHAR [ 10 ] )
- baseFret ( INTEGER  )
- fingerPlacement ( VARCHAR [ 20 ] )
- barre ( BOOLEAN )
- barreStart ( INTEGER )
-----------------------------------------------

-----------|| Chord Progression ||-------------

primary key: progressionID ( INTEGER )
attributes:
- genre ( VARCHAR [ 10 ] )
- key ( VARCHAR [ 10 ] )
- structure ( VARCHAR [ 10 ] )
-----------------------------------------------

---// Connecting Tables //---

----------------------|| Progression chords ||-----------------------------------------

primary key (composite): progressionID ( INTEGER ) & chordID ( INTEGER )
attribute:
- chordPosition ( INTEGER ) // position of chord in overall progression //
---------------------------------------------------------------------------------------

----------------------|| User saved progressions ||------------------------------------

primary key (composite): EmailAddress ( VARCHAR [ 30 ] ) & ProgressionFID ( INTEGER )
---------------------------------------------------------------------------------------

---// Access Table //---

--------------|| Make Chords ||----------------

primary key: emailAddress ( VARCHAR [ 30 ] )

---------------------------------------------------

---// Stored Function //---

canMakeChords( string email ) : boolean // checks make chords table for email, 
                                        // if present then can make chords and progressions


------------------------------|| SQL Used to create database ||-------------------------------

IF OBJECT_ID('dbo.Chords', 'U') IS NOT NULL
DROP TABLE dbo.Chords
GO

 CREATE TABLE dbo.Chords
(
    ChordID INT IDENTITY(1,1) PRIMARY KEY,
    Note [NVARCHAR](10) NOT NULL,
    BaseFret INT NOT NULL,
    FingerPlaceMent [NVARCHAR](20) NOT NULL,
    Barre BIT NOT NULL,
    BarreStart INT
);

GO

IF OBJECT_ID('dbo.Progressions', 'U') IS NOT NULL
DROP TABLE dbo.Progressions
GO

 CREATE TABLE dbo.Progressions
(
    ProgressionID INT IDENTITY(1,1) PRIMARY KEY,
    Genre [NVARCHAR](10) NOT NULL,
    NoteKey [NVARCHAR](10) NOT NULL,
    Structure [NVARCHAR](10) NOT NULL
);

GO

IF OBJECT_ID('dbo.ProgressionChords', 'U') IS NOT NULL
DROP TABLE dbo.ProgressionChords
GO

 CREATE TABLE dbo.ProgressionChords
(
    ProgressionFID INT NOT NULL,
    ChordFID INT NOT NULL,
    ChordPosition INT NOT NULL,
    CONSTRAINT PK_ProgressionChord PRIMARY KEY (ProgressionFID, ChordFID),
    CONSTRAINT FK_ProgressionChords_Progression FOREIGN KEY (ProgressionFID) REFERENCES dbo.Progressions(ProgressionID),
    CONSTRAINT FK_ProgressionChords_Chord FOREIGN KEY (ChordFID) REFERENCES dbo.Chords(ChordID)
);

GO

IF OBJECT_ID('dbo.ChordMaker', 'U') IS NOT NULL
DROP TABLE dbo.ChordMaker
GO

 CREATE TABLE dbo.ChordMaker
(
    EmailAddress [NVARCHAR](35) NOT NULL PRIMARY KEY
);

GO

CREATE FUNCTION dbo.canMakeChords( @useremail NVARCHAR(35)  )
RETURNS int
WITH EXECUTE AS CALLER
AS
BEGIN
    DECLARE @canMake int;
    SET @canMake= 0;

    IF EXISTS(SELECT 'True' FROM dbo.ChordMaker WHERE EmailAddress = @useremail)
        SET @canMake= 1;

    RETURN @canMake;
END;
GO

IF OBJECT_ID('dbo.SavedProgressions', 'U') IS NOT NULL
DROP TABLE dbo.SavedProgressions
GO

 CREATE TABLE dbo.SavedProgressions
(
    EmailAddress [NVARCHAR](35) NOT NULL,
    ProgressionFID INT NOT NULL,
    CONSTRAINT PK_UserProgression PRIMARY KEY (EmailAddress, ProgressionFID),
    CONSTRAINT FK_UserProgression_Progression FOREIGN KEY (ProgressionFID) REFERENCES dbo.Progressions(ProgressionID)
);

GO
